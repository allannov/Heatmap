The web server can be set up on the Raspberry Pi itself. You can use a web server software like Apache or Nginx to host the `visualize_heatmap.js` file and the CSV data file on the Raspberry Pi. General steps to set up a web server on a Raspberry Pi:

1. Install a web server software like Apache or Nginx on the Raspberry Pi.

2. Copy the `visualize_heatmap.js` file and the CSV data file to the web server's root directory. For example, if you are using Apache, you can copy the files to the `/var/www/html` directory.

3. Start the web server. The web server should now be accessible from any device on the same local network as the Raspberry Pi.

4. To view the dynamic map, open a web browser on your PC or mobile phone and enter the IP address of the Raspberry Pi in the address bar. If you are using Apache, you can enter `http://<raspberry_pi_ip_address>/visualize_heatmap.js` to view the `visualize_heatmap.js` file, and `http://<raspberry_pi_ip_address>/received_data.csv` to view the CSV data file.

5. Once you have accessed the `visualize_heatmap.js` file, the dynamic map should be displayed in the web browser, and you can interact with it by panning and zooming to view the WiFi heatmap.


Set up a web server on your Raspberry Pi and access the generated heatmap from your PC

1. Setting Up the Web Server:
   - Install Apache, a popular web server software, on your Raspberry Pi. You can do this by running the following command in the terminal:
     
     sudo apt-get update
     sudo apt-get install apache2 -y
     

2. Place the Files:
   - Place all the necessary files (`main.py`, `index.html`, `visualize_heatmap.js`, and `heatmap.html`) in the web server's root directory. By default, the root directory for Apache on Raspberry Pi is `/var/www/html/`.

3. Start the Web Server:
   - Once the files are in place, start the Apache web server by running the following command:
     
     sudo service apache2 start
     

4. Accessing the Webpage:
   - To access the webpage from your PC, you need to know the IP address of your Raspberry Pi. You can find this by running the following command on the Raspberry Pi:
     
     hostname -I
     

5. Access the Webpage:
   - On your PC, open a web browser and enter the IP address of your Raspberry Pi. For example, if the IP address is 192.168.1.100, you would enter the following in the web browser's address bar:
     
     http://192.168.1.100/heatmap.html
     


[1] https://www.circuitbasics.com/introduction-to-web-servers/
[2] https://www.instructables.com/Connecting-Your-Raspberry-Pi-to-the-Web/
[3] https://www.seeedstudio.com/blog/2020/06/23/setup-a-raspberry-pi-web-server-and-easily-build-an-html-webpage-m/
[4] https://forums.raspberrypi.com/viewtopic.php?t=343189
[5] https://geekflare.com/how-to-create-heatmap-in-python/



To initiate and use Google Cloud Platform (GCP) to host the `visualize_heatmap.js` file and the CSV data, you can follow these general steps:

1. Create a GCP Project:
   - If you don't have a GCP project, you can create one by following the instructions provided in the GCP documentation[3]. This project will serve as the basis for creating, enabling, and using all GCP services, including hosting the web application.

2. Set Up a Virtual Machine (VM) or App Engine:
   - You can set up a VM or use App Engine to host the `visualize_heatmap.js` file and the CSV data. If you choose to use a VM, you can follow the GCP documentation for creating and configuring a VM instance[1]. If you prefer to use App Engine, you can follow the GCP documentation for getting started with App Engine[1].

3. Upload Files to the VM or App Engine:
   - Once the VM or App Engine is set up, you can upload the `visualize_heatmap.js` file and the CSV data to the VM or App Engine using the GCP Console or the `gcloud` command-line tool.

4. Access the Dynamic Map:
   - After the files are uploaded, you can access the dynamic map by entering the IP address or domain name of the VM or App Engine instance in a web browser. If you are using a custom domain, make sure it is properly configured to point to the VM or App Engine instance.

By following these steps, you can initiate and use GCP to host the dynamic map generated by the `visualize_heatmap.js` file and the CSV data. This will allow you to access the dynamic map from any device with a web browser.

